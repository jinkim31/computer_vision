#include <QFileDialog>
#include <QPainter>

#include "mainframe.h"
#include "ui_mainframe.h"
#include "imageform.h"

#include "iostream"
using namespace std;

MainFrame::MainFrame(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::MainFrame)
{
    ui->setupUi(this);

    _plpImageForm       = new KPtrList<ImageForm*>(10,false,false);
    _q_pFormFocused     = 0;

    //객체 맴버의 초기화

    //get a current directory
    char st[100];
    GetCurrentDirectoryA(100,st);

    //리스트 출력창을 안보이게
    ui->listWidget->setVisible(false);
    this->adjustSize();

    //UI 활성화 갱신
    UpdateUI();
}

MainFrame::~MainFrame()
{ 
    delete ui;
    delete _plpImageForm;


}

void MainFrame::CloseImageForm(ImageForm *pForm)
{
    //ImageForm 포인터 삭제
    _plpImageForm->Remove(pForm);

    //활성화 ImageForm 초기화
    _q_pFormFocused     = 0;

    //관련 객체 삭제

    //UI 활성화 갱신
    UpdateUI();
}

void MainFrame::UpdateUI()
{
    if(ui->tabWidget->currentIndex() == 0)
    {
        ui->buttonSepiaTone ->setEnabled( _q_pFormFocused &&  _q_pFormFocused->ID() == "OPEN" );
        ui->pushButtonLCT   ->setEnabled( _q_pFormFocused &&  _q_pFormFocused->ID() == "OPEN" );
    }
    else if(ui->tabWidget->currentIndex() == 1)
    {
        ui->pushButtonOtsu  ->setEnabled( _q_pFormFocused &&  _q_pFormFocused->ID() == "OPEN" );
    }
    else if(ui->tabWidget->currentIndex() == 2)
    {

    }
}

void MainFrame::OnMousePos(const int &nX, const int &nY, ImageForm* q_pForm)
{

    UpdateUI();
}

void MainFrame::closeEvent(QCloseEvent* event)
{
    //생성된 ImageForm을 닫는다.
    for(int i=_plpImageForm->Count()-1; i>=0; i--)
        _plpImageForm->Item(i)->close();

    //리스트에서 삭제한다.
    _plpImageForm->RemoveAll();
}


void MainFrame::on_buttonOpen_clicked()
{
    //이미지 파일 선택
    QFileDialog::Options    q_Options   =  QFileDialog::DontResolveSymlinks  | QFileDialog::DontUseNativeDialog; // | QFileDialog::ShowDirsOnly
    QString                 q_stFile    =  QFileDialog::getOpenFileName(this, tr("Select a Image File"),  "./data", "Image Files(*.bmp *.ppm *.pgm *.png)",0, q_Options);

    if(q_stFile.length() == 0)
        return;

    //이미지 출력을 위한 ImageForm 생성
    ImageForm*              q_pForm   = new ImageForm(q_stFile, "OPEN", this);

    _plpImageForm->Add(q_pForm);
    q_pForm->show();

    //UI 활성화 갱신
    UpdateUI();
}

void MainFrame::on_buttonDeleteContents_clicked()
{
    //생성된 ImageForm을 닫는다.
    for(int i=_plpImageForm->Count()-1; i>=0; i--)
        _plpImageForm->Item(i)->close();

    //리스트에서 삭제한다.
    _plpImageForm->RemoveAll();
}

void MainFrame::on_buttonSepiaTone_clicked()
{
    K_VISION homework1;

    //포커스 된 ImageForm으로부터 영상을 가져옴
    KImageColor   icMain;
    if(_q_pFormFocused != 0 && _q_pFormFocused->ImageColor().Address() &&  _q_pFormFocused->ID() == "OPEN")
        icMain = _q_pFormFocused->ImageColor();
    else
        return;

    //hue, saturation 값 가져오기
    double dHue = ui->spinHue->text().toDouble();
    double dSat = ui->spinSaturation->text().toDouble(); // 위와 같은 식으로

    KArray<KHSV> transformImage;
    transformImage = homework1.RGBtoHSV(icMain);

    vector<KImageGray> hsvSplit(3);
    homework1.splitHSV(transformImage, hsvSplit[0], hsvSplit[1], hsvSplit[2]);
    homework1.sepiaTone(transformImage, dHue, dSat);

    //출력을 위한 ImageForm 생성
    ImageForm*  q_pForm = new ImageForm(homework1.HSVtoRGB(transformImage), "Sepia Tone", this);
    ImageForm*  q_pFormH = new ImageForm(hsvSplit[0], "H", this);
    ImageForm*  q_pFormS = new ImageForm(hsvSplit[1], "S", this);
    ImageForm*  q_pFormV = new ImageForm(hsvSplit[2], "V", this);

    _plpImageForm->Add(q_pForm);
    _plpImageForm->Add(q_pFormH);
    _plpImageForm->Add(q_pFormS);
    _plpImageForm->Add(q_pFormV);

    q_pForm->show();
    q_pFormH->show();
    q_pFormS->show();
    q_pFormV->show();

    //UI 활성화 갱신
    UpdateUI();
}


void MainFrame::on_buttonShowList_clicked()
{
    static int nWidthOld = ui->tabWidget->width();

    if(ui->listWidget->isVisible())
    {
        nWidthOld = ui->listWidget->width();
        ui->listWidget->hide();
        this->adjustSize();
    }
    else
    {
        ui->listWidget->show();
        QRect q_rcWin = this->geometry();

        this->setGeometry(q_rcWin.left(), q_rcWin.top(), q_rcWin.width()+nWidthOld, q_rcWin.height());
    }
}

void MainFrame::on_pushButtonLCT_clicked()
{
    K_VISION homework1;
    KImageGray igImage;
    KImageColor icImage;
    ImageForm*  q_pForm_result;
    ImageForm*  q_pForm_result2;
    KImageGray igImage2;


    double a = ui->spinBoxA->text().toDouble();
    double b = ui->spinBoxB->text().toDouble();

    if(_q_pFormFocused != 0 && _q_pFormFocused->ImageColor().Address() &&  _q_pFormFocused->ID() == "OPEN")
    {
        icImage = homework1.LCT(0, 255, a, b, _q_pFormFocused->ImageColor());
        q_pForm_result =  new ImageForm(icImage, "LCT - Color image", this);
    }
    else if(_q_pFormFocused != 0 && _q_pFormFocused->ImageGray().Address() &&  _q_pFormFocused->ID() == "OPEN")
    {
        igImage = homework1.LCT(0, 255, a, b, _q_pFormFocused->ImageGray());
        q_pForm_result =  new ImageForm(igImage, "LCT - Gray image", this);
       igImage2 =  _q_pFormFocused->ImageGray();
       q_pForm_result2 =  new ImageForm(igImage2.ContrastTransform(0, 255, a, b), "JMH - Gray image", this);
    }
    else
        return;

    _plpImageForm->Add(q_pForm_result);
    q_pForm_result->show();

    _plpImageForm->Add(q_pForm_result2);
    q_pForm_result2->show();
    //UI 활성화 갱신
    UpdateUI();
}


void MainFrame::on_pushButtonOtsu_clicked()
{
    K_VISION homework2;
    KImageGray igImage_otsu;
    KImageGray igImage_label;
    KImageColor iCImage;
    map<int, int> equivalenceTable;
    ImageForm*  q_pForm_result_otsu;
    ImageForm*  q_pForm_result_label;

    if(_q_pFormFocused != 0 && _q_pFormFocused->ImageGray().Address() &&  _q_pFormFocused->ID() == "OPEN")
    {
        igImage_otsu = homework2.Otsu(_q_pFormFocused->ImageGray());
        q_pForm_result_otsu =  new ImageForm(igImage_otsu, "Otsu - Gray image", this);



        homework2.Labeling(igImage_otsu, igImage_label, equivalenceTable);
        iCImage.Create(igImage_label.Row(), igImage_label.Col());
        for(int y = 0; y < igImage_label.Row(); y++)
            for(int x = 0; x < igImage_label.Col(); x++)
            {
                if(igImage_label[y][x] != 0)
                {
//                    cout<<"(int)igImage_label[y][x]: "<<(int)igImage_label[y][x]<<endl;
                    cout<<"equivalenceTable[(int)igImage_label[y][x]]: "<<equivalenceTable[(int)igImage_label[y][x]]<<endl;
                    if(equivalenceTable[(int)igImage_label[y][x]] %2 == 0)
                    {
                        iCImage._ppA[y][x].r =  255;
                        iCImage._ppA[y][x].g = equivalenceTable[(int)igImage_label[y][x]]*50 > 254 ? 254 : equivalenceTable[(int)igImage_label[y][x]]*50;
                        iCImage._ppA[y][x].b = equivalenceTable[(int)igImage_label[y][x]]*2;
                    }

                }
//                else
//                    cout<<"ssssssssssssssssssssssssss"<<endl;

            }
        q_pForm_result_label =  new ImageForm(iCImage, "Labeling - Gray image", this);

    }
    else
        return;

    _plpImageForm->Add(q_pForm_result_otsu);
    _plpImageForm->Add(q_pForm_result_label);

    q_pForm_result_otsu->show();
    q_pForm_result_label->show();

}
